import { IPluginConfiguration, IGulptraumPlugin, IGulpVersionAdapter, ITaskConfiguration, IBuildSystem, IBuildSystemConfiguration } from './index';
export declare class BuildSystem implements IBuildSystem {
    pluginConfigs: Map<string, IPluginConfiguration>;
    plugins: Map<string, IGulptraumPlugin>;
    gulpAdapter: IGulpVersionAdapter;
    gulp: any;
    config: IBuildSystemConfiguration;
    cli: any;
    constructor(config: IBuildSystemConfiguration);
    readonly tasks: string[];
    initialize(): void;
    private _initializeGulpVersionAdapter();
    private _validateBuildSystemConfig(config);
    registerTasks(externalGulp?: any): void;
    _registerSystemTasks(): void;
    _registerSystemTask(taskName: any): void;
    _getSystemTasks(): string[];
    _getSystemTask(taskName: any): any;
    _initializePlugins(): void;
    _initializePlugin(name: any): void;
    _registerTasksBeforePlugins(): void;
    _registerTasksAfterPlugins(): void;
    _registerConventionalTasks(): void;
    private _getTasksInRunningOrder(pluginKeys);
    private _getTaskNameByConvention(taskName, pluginKey);
    private _getBuildTasksForConventionalTask(taskName);
    private _filterUnregisteredTasks(tasks);
    task(taskName: string, config: ITaskConfiguration, taskCallback: Function): void;
    private _registerTaskToCli(taskName, help);
    private _ensureTaskIsRegisteredToCli(taskName);
    private _runTaskFromCli(taskName, args, callback);
    private _runCommandInChildProcess(command, callback);
    private _registerConventionalTaskToCli(taskName);
    private _registerConventionalTask(taskName);
    private _getConventionalTaskConfig(taskName);
    private _getHelpForConventionalTask(taskName);
    private _getPluginKeysGroupedByPriority();
    private _getPluginKeys();
    private _getPlugin(name);
    private _getPluginConfig(name);
    private _getPluginDefaultConfig(name);
    private _getResolvedPluginConfig(name);
    private _getPluginKeysOrderedByPriority();
    private _mergeConfigs(defaultConfig, config);
    registerPlugin(name: string, plugin: IGulptraumPlugin, config: IPluginConfiguration, priority?: number): IBuildSystem;
}
