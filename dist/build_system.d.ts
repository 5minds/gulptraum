import { IPluginConfiguration, IGulptraumPlugin, IGulpVersionAdapter, ITaskConfiguration, IBuildSystem, IBuildSystemConfiguration } from './index';
export declare class BuildSystem implements IBuildSystem {
    pluginConfigs: Map<string, IPluginConfiguration>;
    plugins: Map<string, IGulptraumPlugin>;
    gulpAdapter: IGulpVersionAdapter;
    gulp: any;
    config: IBuildSystemConfiguration;
    cli: any;
    constructor(config: IBuildSystemConfiguration);
    readonly tasks: string[];
    initialize(): void;
    registerTasks(externalGulp?: any): void;
    private _initializeGulpVersionAdapter;
    private _validateBuildSystemConfig;
    private _registerTasksBeforePlugins;
    private _registerSystemTasks;
    private _registerSystemTask;
    private _getSystemTasks;
    private _getSystemTask;
    private _initializePlugins;
    private _initializePlugin;
    private _registerTasksAfterPlugins;
    private _registerConventionalTasks;
    private _getTasksInRunningOrder;
    private _getTaskNameByConvention;
    private _getBuildTasksForConventionalTask;
    private _filterUnregisteredTasks;
    task(taskName: string, config: ITaskConfiguration, taskCallback: Function): void;
    private _registerTaskToCli;
    private _runTaskFromCli;
    private _runCommandInChildProcess;
    private _registerConventionalTaskToCli;
    private _registerConventionalTask;
    private _getHelpForConventionalTask;
    private _getConventionalTaskConfig;
    private _getPluginKeysGroupedByPriority;
    private _getPluginKeys;
    private _getPlugin;
    private _getPluginConfig;
    private _getPluginDefaultConfig;
    private _getResolvedPluginConfig;
    private _getPluginKeysOrderedByPriority;
    private _mergeConfigs;
    registerPlugin(name: string, plugin: IGulptraumPlugin, config: IPluginConfiguration, priority?: number): IBuildSystem;
}
